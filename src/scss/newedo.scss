@use 'helper' as *;

/* Global styles */
@use 'global/window' as *;
@use 'global/grid' as *;
@use 'global/flex' as *;
@use 'global/sheet' as *;

//anything imported into this group will require its PARENT have the newedo class, if it needs to share the newedo class it should start with &
@use 'components/forms' as form;
@use 'components/resource' as resource;
@use 'components/items' as item;
@use 'components/effects' as effects;
@use 'components/images' as images;
@use 'newedo/actor' as actor;
@use 'newedo/items' as items;
@use 'components/resource-bar' as bar;

@use 'newedo/dialog' as dialog;

.newedo {
  &#context-menu {
    width: auto;
  }
}

//=========================================================================================
// Components
//=========================================================================================

/*
|| Collapsible items

.collapsible - Repersents a container with collapsible elements inside of it
.collapsible-content - a container to be shrunk down when the container is collapsed
.wrapper - the actual content being shrunk down
*/

.collapsible {
  .fa-caret-down {
    transition: all 0.3s ease-in-out;
  }

  &.collapsed {
    .fa-caret-down {
      transform: rotate(-90deg);
    }

    .collapsible-content {
      grid-template-rows: 0fr;
    }
  }

  .collapsible-content {
    display: grid;
    grid-template-rows: 1fr;
    transition: all 0.3s ease-in-out;

    >.wrapper {
      overflow: hidden;
    }
  }
}

/*
|| Fillable bars
.bar - main wrapper
.bar
.bar.fill
*/

.edo-bar {
  padding: 4px;
  --edo-bar-size: 8px;
  --edo-bar-colour: green;
  --edo-bar-bg: black;
  --edo-bar-padding: 2px;

  // Configuration classes
  &.edo-l {
    --edo-bar-size: 12px;
  }

  &.edo-s {
    --edo-bar-size: 4px;
  }

  >.wrapper {
    background-color: var(--edo-bar-bg);
    border-radius: calc((var(--edo-bar-size) + var(--edo-bar-padding)) / 2);
    height: calc(var(--edo-bar-size) + var(--edo-bar-padding));
    padding: var(--edo-bar-padding);

    .fill {
      background-color: var(--edo-bar-colour);
      border-radius: calc(var(--edo-bar-size) / 2);
      height: 100%;
      max-width: 100%;
      min-width: 0%;
    }
  }
}

// bars with inputs inside the bar itself
.edo-inline-bar {
  --edo-bar-size: 1.4rem;

  &.edo-s {
    --edo-bar-size: 1rem;
  }

  &.edo-l {
    --edo-bar-size: 1.8rem;
  }

  >.wrapper {
    overflow: hidden;
    background-color: var(--edo-bar-bg);
    border-radius: calc((var(--edo-bar-size) + var(--edo-bar-padding)) / 2);
    height: auto;
    padding: var(--edo-bar-padding);

    // forces the child fill element to overlap with any other contents
    display: grid;
    grid-template-columns: 1fr;

    >* {
      grid-row-start: 1;
      grid-column-start: 1;
    }

    .fill {
      background-color: var(--edo-bar-colour);
      border-radius: calc(var(--edo-bar-size) / 2);
      height: 100%;
      max-width: 100%;
      min-width: 0%;
    }

    .bar-inputs {
      display: flex;
      flex-direction: row;

      >* {
        flex: 1;
      }

      input {
        height: var(--edo-bar-size);
        font-size: calc(var(--edo-bar-size) - 0.2em);
        border: 0px solid;
        background: rgba(0, 0, 0, 0);
        text-align: center;
        border: 0;

        &:focus {
          box-shadow: none;
          outline-style: none;
          font-weight: 1.1em;
          color: white;
        }
      }
    }
  }
}

// wrapper for a resource fillable bar and it's inputs
.edo-input-bar {
  padding: 5px;
}